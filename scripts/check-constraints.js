const { PrismaClient } = require('@prisma/client');

const prisma = new PrismaClient();

async function checkConstraints() {
    try {
        console.log('üîç Ki·ªÉm tra constraints v√† d·ªØ li·ªáu hi·ªán t·∫°i...\n');

        // 1. Ki·ªÉm tra existing assignments
        const existingAssignments = await prisma.orgAssignment.findMany({
            include: {
                employee: {
                    include: {
                        user: true
                    }
                },
                org_unit: true,
                position: true
            }
        });

        console.log('üìã Existing assignments:');
        existingAssignments.forEach((assignment, index) => {
            console.log(`  ${index + 1}. ${assignment.employee.user?.full_name} -> ${assignment.org_unit.name} (${assignment.position?.title || 'No position'})`);
        });

        // 2. Th·ª≠ c·∫≠p nh·∫≠t assignment ƒë·∫ßu ti√™n v·ªõi approach ƒë∆°n gi·∫£n
        console.log('\nüîÑ Th·ª≠ c·∫≠p nh·∫≠t assignment ƒë·∫ßu ti√™n...');
        try {
            const firstAssignment = existingAssignments[0];
            if (firstAssignment) {
                await prisma.orgAssignment.update({
                    where: {
                        id: firstAssignment.id
                    },
                    data: {
                        org_unit_id: BigInt(28), // Tr∆∞·ªùng Y D∆∞·ª£c
                        position_id: BigInt(8),  // RECTOR
                        assignment_type: 'admin'
                    }
                });
                console.log('‚úÖ C·∫≠p nh·∫≠t th√†nh c√¥ng assignment ƒë·∫ßu ti√™n');
            }
        } catch (error) {
            console.log('‚ùå L·ªói c·∫≠p nh·∫≠t assignment ƒë·∫ßu ti√™n:', error.message);
        }

        // 3. Ki·ªÉm tra k·∫øt qu·∫£
        console.log('\nüìã Ki·ªÉm tra k·∫øt qu·∫£ sau khi c·∫≠p nh·∫≠t:');
        const updatedAssignments = await prisma.orgAssignment.findMany({
            include: {
                employee: {
                    include: {
                        user: true
                    }
                },
                org_unit: true,
                position: true
            }
        });

        updatedAssignments.forEach((assignment, index) => {
            console.log(`  ${index + 1}. ${assignment.employee.user?.full_name} -> ${assignment.org_unit.name} (${assignment.position?.title || 'No position'})`);
        });

    } catch (error) {
        console.error('‚ùå L·ªói:', error.message);
        console.error('Chi ti·∫øt:', error);
    } finally {
        await prisma.$disconnect();
    }
}

checkConstraints();

